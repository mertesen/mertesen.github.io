const flashcards = [
            // System Components & Patterns
            { term: "API Gateway", definition: "A single entry point for client requests, handling routing, auth, rate-limiting, etc.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Reverse Proxy", definition: "A server that forwards client requests to backend servers, often for load balancing or SSL.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Load Balancer", definition: "Distributes incoming traffic across multiple servers to improve availability and responsiveness.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Message Queue", definition: "A buffer between producers and consumers for asynchronous message processing.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Broker", definition: "Middleware (e.g., Kafka, RabbitMQ) that routes and stores messages for communication between services.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "At Most Once", definition: "No duplicates, but messages may be lost.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "At Least Once", definition: "No loss, but duplicates may occur.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Exactly Once", definition: "Each message is processed one and only one time.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Circuit Breaker", definition: "Prevents repeated calls to a failing service by opening a circuit and retrying later.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Retry Policy", definition: "Defines how failed operations are retried (e.g., exponential backoff, max attempts).", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Timeout", definition: "A limit on how long to wait for a response before giving up.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Rate Limiting", definition: "Restricting how many requests a client can make in a given time frame.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Service Registry", definition: "A dynamic database of available services and their locations, used in service discovery.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Edge Service", definition: "A component at the network boundary handling requests before they reach core services.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Sidecar Proxy", definition: "A proxy deployed alongside a service container to manage communication and policies.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Service Orchestrator", definition: "Manages workflows between multiple services, often enforcing execution order and handling failures.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Service Choreography", definition: "A decentralized way for services to interact by emitting and reacting to events.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Ingress Controller", definition: "Manages external access to services in a Kubernetes cluster, typically via HTTP.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Daemon", definition: "A background service process that performs tasks independently of user input.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Worker Pool", definition: "A set of processes or threads consuming tasks from a shared queue.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Task Scheduler", definition: "A component that triggers tasks or jobs at scheduled intervals or based on conditions.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Configuration Server", definition: "Centralizes external configuration for services in a distributed system.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Bootstrap Node", definition: "A node that helps new nodes discover and join a distributed system.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Init Container", definition: "A special container in Kubernetes that runs before the main container to prepare dependencies.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Orchestration Engine", definition: "Coordinates deployment, scaling, and lifecycle of containers or services.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Envoy", definition: "A high-performance proxy used in service mesh architectures.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Service Fa√ßade", definition: "A layer that provides a simplified interface to a complex subsystem.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Ingress Controller", definition: "Manages external access to services in a Kubernetes cluster, typically via HTTP/HTTPS.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "DaemonSet", definition: "Ensures a copy of a pod runs on all or some nodes in a Kubernetes cluster.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Stateful Service", definition: "A service that maintains state across requests or sessions.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Service Registry", definition: "Stores metadata about services, enabling discovery and routing.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Init System", definition: "The first process started during boot, used to manage services (e.g., systemd).", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Service Level Objective (SLO)", definition: "A measurable goal for system reliability and performance.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "CAP Theorem", definition: "States that a distributed system can only guarantee two of the following three: Consistency, Availability, and Partition Tolerance.", category: "System Components", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Horizontal Scaling", definition: "Adding more machines to handle increased load instead of increasing the capacity of a single machine.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Vertical Scaling", definition: "Increasing the capacity of a single machine (CPU, RAM) to handle more load.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Eventual Consistency", definition: "A model where updates will propagate eventually and all nodes will become consistent over time.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Strong Consistency", definition: "Guarantees that every read returns the most recent write.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Load Shedding", definition: "Dropping requests when the system is overloaded to preserve stability for prioritized traffic.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Write Amplification", definition: "A phenomenon where a small logical write causes multiple physical writes, often in SSDs or DBs.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Read Replicas", definition: "Database replicas used to serve read traffic and reduce load on the primary database.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Thundering Herd", definition: "A burst of identical requests hitting the system simultaneously (e.g., after cache miss).", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Cache Invalidation", definition: "The process of removing outdated data from the cache when the underlying data changes.", category: "System Components", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Bloom Filter", definition: "A probabilistic data structure to test whether an element is in a set, with false positives allowed.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Distributed Consensus", definition: "A protocol (like Raft or Paxos) that helps nodes in a distributed system agree on a single value.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Service Granularity", definition: "The size and scope of functionality that a service owns; fine-grained vs coarse-grained.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Single Point of Failure (SPOF)", definition: "A part of the system that, if it fails, causes the whole system to fail.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Cold Start", definition: "The delay when initializing a service, container, or function that's not yet warm.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Tail Latency", definition: "The latency experienced by the slowest requests; important in distributed systems.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Data Locality", definition: "Keeping compute close to the data to reduce latency and improve performance.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Quorum Write", definition: "A write considered successful only after being acknowledged by a majority of nodes.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Leader-Follower Pattern", definition: "One leader handles writes; followers replicate and serve reads.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Back-of-the-Envelope Calculation", definition: "Rough estimates to assess feasibility of architectural components (e.g., storage, QPS).", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Write-Through Cache", definition: "Updates both the cache and the underlying storage on write operations.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Write-Back Cache", definition: "Updates only the cache initially; underlying storage is updated later.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Circuit Breaking Pattern", definition: "Prevents repeated calls to a failing service by opening a temporary 'circuit'.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Bulkhead Isolation", definition: "Isolates components or service partitions to contain failures.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Idempotent Operation", definition: "An operation that can be applied multiple times without changing the result beyond the initial application.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "High Availability (HA)", definition: "Designing systems to ensure continuous operation despite failures.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Latency Budget", definition: "The allowable time a system or service has to respond under an SLA.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Georeplication", definition: "Distributing data across regions to reduce latency and improve availability.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Sticky Sessions", definition: "Routing a user‚Äôs requests to the same backend instance during a session.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Split-Brain", definition: "A situation where cluster nodes lose communication and operate independently, leading to inconsistency.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Leader Election", definition: "The process of choosing one node as the primary for coordination.", category: "System Components", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Snowballing Failure", definition: "A cascading failure where one service's slowdown causes widespread degradation.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Graceful Shutdown", definition: "A service shuts down cleanly, finishing active requests and freeing resources.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Service Discovery", definition: "Mechanism by which services dynamically locate each other in a distributed system.", category: "System Components", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Service Registry", definition: "A database where services register and lookup other service endpoints.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Strangler Fig Pattern", definition: "Gradually replacing parts of a monolith by routing traffic to new services.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "API Composition", definition: "Combining responses from multiple microservices into a single API response.", category: "System Components", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Snapshot Isolation", definition: "A concurrency control method where transactions operate on a consistent snapshot of the DB.", category: "System Components", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Out-of-Order Execution", definition: "Processing tasks or events not in the order received, often for performance.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Monotonic Reads", definition: "Guarantees that subsequent reads by a user won‚Äôt return older data.", category: "System Components", difficulty: "Advanced", usageFrequency: "Rare" },

            // Data Management
            { term: "Database Transaction", definition: "A unit of work performed within a database that is atomic and reliable.", category: "Data Management", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Sharding", definition: "Splitting a database into smaller, distributed partitions (shards) for scalability.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Replication", definition: "Copying data across multiple nodes to ensure fault tolerance and availability.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Optimistic Locking", definition: "Assumes no conflict, checks version/timestamp before update.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Pessimistic Locking", definition: "Locks records upon reading to prevent concurrent writes.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Immutable Data", definition: "Data that cannot be changed after creation, aiding concurrency and versioning.", category: "Data Management", difficulty: "Beginner", usageFrequency: "Moderate" },
            { term: "Outbox Pattern", definition: "Stores domain events in a local DB table and then forwards them to a message broker.", category: "Data Management", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Change Data Capture (CDC)", definition: "Capturing changes in a database and pushing them to downstream systems in real-time.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Schema Evolution", definition: "Managing changes to data schema without breaking consumers.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Soft Delete", definition: "Marking data as deleted without removing it physically from storage.", category: "Data Management", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Eventual Consistency", definition: "The system will become consistent over time, given no new updates.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Snapshotting", definition: "Capturing the full state of a dataset or system at a specific point in time.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Write-Ahead Logging (WAL)", definition: "A technique where changes are logged before being applied to ensure recoverability.", category: "Data Management", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Data Lake", definition: "A centralized repository for storing raw structured and unstructured data at any scale.", category: "Data Management", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Data Lineage", definition: "The history and transformation path of data from origin to current form.", category: "Data Management", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Indexing", definition: "Creating a data structure that improves retrieval speed for queries.", category: "Data Management", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Column-Oriented Database", definition: "Stores data tables by column rather than row, optimized for analytical queries.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Materialized View", definition: "A database object that contains the results of a query and can be refreshed.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Eventual Write Consistency", definition: "Writes may be delayed across replicas but will converge eventually.", category: "Data Management", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Secondary Index", definition: "An index built on non-primary key attributes to improve query performance.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Cold Storage", definition: "Low-cost, infrequently accessed data storage, often used for archiving.", category: "Data Management", difficulty: "Beginner", usageFrequency: "Moderate" },
            { term: "Compaction", definition: "The process of merging and cleaning up fragmented or obsolete data in storage systems.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Data Contract", definition: "An agreement that defines the format and expectations of shared data between services.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Schema Registry", definition: "Manages and validates data schemas, often in streaming systems like Kafka.", category: "Data Management", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Bitemporal Data", definition: "Captures both actual event time and system record time.", category: "Data Management", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Bloom Filter", definition: "A space-efficient data structure for checking set membership with possible false positives.", category: "Data Management", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "ACID Compliance", definition: "Guarantees that database transactions are Atomic, Consistent, Isolated, and Durable.", category: "Data Management", difficulty: "Beginner", usageFrequency: "Common" },

            // Event-Driven & Streaming
            { term: "Event Sourcing", definition: "Storing state changes as a series of immutable events.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Event Stream", definition: "A continuous, append-only sequence of events.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Data Stream Processing", definition: "Real-time transformation and analysis of data as it flows through systems.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Kafka", definition: "A distributed event streaming platform for high-throughput, fault-tolerant messaging.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Consumer Group (Kafka)", definition: "A set of consumers sharing the workload of a Kafka topic's partitions.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Compaction (Kafka)", definition: "Retains only the latest message for each key in a topic.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Backpressure", definition: "When consumers signal producers to slow down due to being overloaded.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Dead Letter Queue", definition: "A queue that stores messages that failed processing for later inspection or retries.", category: "Event-Driven", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Fan-out", definition: "One input to multiple outputs.", category: "Event-Driven", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Fan-in", definition: "Multiple inputs to one output.", category: "Event-Driven", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Publish-Subscribe Pattern", definition: "A messaging pattern where publishers send messages to topics, and subscribers receive relevant messages.", category: "Event-Driven", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Idempotent Consumer", definition: "A consumer that can process the same message multiple times without adverse effects.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Event Envelope", definition: "Additional metadata attached to an event, such as correlation ID or schema version.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Event Carried State Transfer", definition: "Embedding state in events to avoid synchronous lookups from consumers.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Stream Partitioning", definition: "Splitting a stream into logical partitions for scalability and parallel processing.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Watermarking", definition: "A technique in stream processing to indicate event time progress for late data handling.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Replay", definition: "Reprocessing past events from a log to rebuild state or recover from errors.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Schema Registry", definition: "A service to store and validate data schemas (e.g., Avro) for serialized event messages.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Event Drift", definition: "A situation where producers and consumers interpret the same event differently due to version mismatches.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Event Store", definition: "A specialized database optimized for storing and querying event streams.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Topic", definition: "A named channel in a messaging system to which producers write and consumers subscribe.", category: "Event-Driven", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Message Acknowledgment", definition: "Confirmation that a message was received and processed successfully.", category: "Event-Driven", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Schema Evolution (Kafka)", definition: "Managing changes to message formats in a backward-compatible way.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Transactional Messaging", definition: "Guarantees that a group of messages are published or consumed atomically.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Poison Message", definition: "A message that repeatedly fails processing and often ends up in a dead letter queue.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Checkpointing", definition: "Recording the last processed offset to enable recovery and replay.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Event Envelope", definition: "Wraps event data with metadata such as timestamp, type, and correlation ID.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Idempotent Producer", definition: "A message producer that avoids duplicates when retrying.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Stream Join", definition: "Combining data from two or more streams based on a common key or window.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Windowing", definition: "Grouping streaming data into finite time-based or count-based chunks for processing.", category: "Event-Driven", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Watermark", definition: "Indicates progress in event time in stream processing to handle out-of-order events.", category: "Event-Driven", difficulty: "Advanced", usageFrequency: "Rare" },

            // Reliability & Resilience
            { term: "Service Discovery", definition: "Automatic detection of services and their addresses in a network.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Leader Election", definition: "A mechanism for choosing a coordinator in distributed systems.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Raft Algorithm", definition: "A consensus algorithm for maintaining a consistent state across distributed nodes.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Zookeeper", definition: "A distributed coordination service often used for leader election and service discovery.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Service Mesh", definition: "Manages communication, security, and monitoring between microservices (e.g., Istio, Linkerd).", category: "Reliability", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Sidecar Pattern", definition: "Deploying support services (e.g., proxy, logger) alongside application containers.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Blue-Green Deployment", definition: "Two environments (blue and green) for safe, zero-downtime deployment.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Canary Deployment", definition: "Releasing new features to a small user group before full rollout.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Chaos Engineering", definition: "Deliberately injecting faults to test system resilience and recovery.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Graceful Degradation", definition: "A system design approach that allows partial functionality during partial failure.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Health Check", definition: "A diagnostic endpoint or probe used to determine the health of a service.", category: "Reliability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Redundancy", definition: "Having duplicate systems or components to increase fault tolerance.", category: "Reliability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Self-Healing System", definition: "A system that automatically detects and recovers from faults.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Failover", definition: "Automatically switching to a backup component or system upon failure.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Quorum", definition: "The minimum number of nodes that must agree for a distributed operation to proceed.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Bulkhead Pattern", definition: "Isolating system components to prevent failure from spreading.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Watchdog Timer", definition: "A timer that resets the system if it becomes unresponsive beyond a threshold.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Rare" },
            { term: "Heartbeat", definition: "Regular signals sent to indicate a component is still alive.", category: "Reliability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Graceful Shutdown", definition: "The process of allowing a service to complete in-flight tasks before terminating.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Service Timeout", definition: "A maximum duration a service will wait for an operation before failing it.", category: "Reliability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Connection Pooling", definition: "Reusing a limited set of connections to improve performance and resource usage.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Stateful Set", definition: "A Kubernetes resource for managing stateful applications with persistent identities.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Idempotency Key", definition: "A token used to prevent duplicated operations in distributed transactions.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Distributed Lock", definition: "A mechanism to ensure mutual exclusion in a distributed system.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Heartbeat Timeout", definition: "The threshold after which a missed heartbeat indicates service failure.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Auto-healing", definition: "Automatically replaces failed components to maintain system health.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Health Check", definition: "A mechanism to verify if a service is running and healthy.", category: "Reliability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Split-Brain Scenario", definition: "When a cluster splits into isolated partitions that act independently, risking inconsistency.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Quorum", definition: "The minimum number of nodes required to reach consensus in distributed systems.", category: "Reliability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Graceful Degradation", definition: "Designing systems to reduce functionality under load rather than failing completely.", category: "Reliability", difficulty: "Intermediate", usageFrequency: "Moderate" },

            // Observability & Monitoring
            { term: "Observability", definition: "The ability to understand system internals using logs, metrics, and traces.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Telemetry", definition: "Automated remote data collection from system components.", category: "Observability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Tracing", definition: "Tracking a single request's journey through multiple services.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "OpenTelemetry", definition: "A standard for collecting distributed traces, metrics, and logs.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Prometheus", definition: "An open-source time-series database and monitoring system.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Grafana", definition: "A visualization platform used with Prometheus and other data sources.", category: "Observability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Metrics Aggregator", definition: "A system that collects and summarizes metrics from multiple services or hosts.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Log Aggregation", definition: "Centralizing logs from multiple sources for querying and analysis.", category: "Observability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Alerting", definition: "Triggering notifications based on predefined conditions or anomalies.", category: "Observability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Histogram", definition: "A metric type that shows distribution across value ranges (buckets).", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Trace Context", definition: "Metadata passed through services to correlate logs and spans of a request.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Dashboards", definition: "Visual interfaces that show system metrics and statuses in real-time.", category: "Observability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Span", definition: "A single operation in a distributed trace, including duration and metadata.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Anomaly Detection", definition: "Using rules or ML to detect unusual behavior in system metrics or logs.", category: "Observability", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "SLI/SLO/SLA", definition: "Service Level Indicator/Objective/Agreement‚Äîmetrics and targets for service reliability.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Synthetic Monitoring", definition: "Simulating user interactions to monitor service availability and response.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Service Map", definition: "A visual graph showing service dependencies and their health status.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Logging Correlation ID", definition: "A unique ID used to trace logs across services for a single request.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Real User Monitoring (RUM)", definition: "Collecting telemetry from real users interacting with a frontend or service.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Span Exporter", definition: "A component that sends collected trace data to external observability tools.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Time Series Database (TSDB)", definition: "A database optimized for storing and querying timestamped data points.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Distributed Log Tracing", definition: "Tracking events across services using logs instead of full-fledged tracing systems.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Histogram", definition: "A metric type that shows the distribution of observed values over time.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Metric Aggregation", definition: "Combining multiple data points into summaries like avg, max, min.", category: "Observability", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Alert Fatigue", definition: "Desensitization to alerts due to excessive noise or false positives.", category: "Observability", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Log Rotation", definition: "The process of archiving and deleting old log files to save space.", category: "Observability", difficulty: "Beginner", usageFrequency: "Moderate" },
            { term: "Anomaly Detection", definition: "Using statistical or machine learning methods to identify unusual behavior.", category: "Observability", difficulty: "Advanced", usageFrequency: "Moderate" },

            // API & Integration
            { term: "REST", definition: "An architectural style using stateless HTTP for resource-based communication.", category: "API", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "gRPC", definition: "A high-performance, contract-based RPC framework using Protocol Buffers.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "GraphQL", definition: "A query language that lets clients request only the data they need.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "CQRS", definition: "Separates read and write operations into different models for scalability.", category: "API", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "SAGA Pattern", definition: "Manages distributed transactions using a sequence of local transactions coordinated via events or commands.", category: "API", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Webhooks", definition: "HTTP callbacks triggered by specific events, notifying other systems in real time.", category: "API", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "API Rate Throttling", definition: "Delaying or denying requests when API usage exceeds defined thresholds.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "API Contract", definition: "A defined agreement about request/response structure between API producers and consumers.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "HATEOAS", definition: "A constraint of REST where clients dynamically navigate resources via hyperlinks in responses.", category: "API", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "OpenAPI Specification", definition: "A standard, machine-readable format for defining RESTful APIs.", category: "API", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Service Virtualization", definition: "Simulating dependent systems during testing when real APIs aren't available.", category: "API", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "API Gateway Pattern", definition: "A design pattern where one gateway handles authentication, routing, and transformation for multiple services.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "API Key", definition: "A token used to authenticate and authorize access to an API.", category: "API", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "OAuth 2.0", definition: "An authorization framework that allows limited access to resources on behalf of a user.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "JWT (JSON Web Token)", definition: "A compact, URL-safe token format for representing claims between two parties.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Payload", definition: "The part of the request or response that contains the actual data being transmitted.", category: "API", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Request Throttling", definition: "Deliberately delaying or limiting the number of requests a client can make.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Service Contract Testing", definition: "Verifies that service integrations meet predefined interface agreements.", category: "API", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "CORS", definition: "A browser security policy that restricts cross-origin HTTP requests.", category: "API", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Rate Limiter", definition: "A component that restricts how often a user can call an API or service.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "gRPC Streaming", definition: "A gRPC feature that allows streaming multiple messages in a single call.", category: "API", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "HATEOAS", definition: "Hypermedia as the Engine of Application State; a REST constraint for discoverability via links.", category: "API", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "API Gateway Pattern", definition: "A pattern where a single point handles routing, auth, and aggregation for microservices.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Content Negotiation", definition: "Allows clients to specify the preferred format (e.g., JSON, XML) in requests.", category: "API", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "OpenAPI", definition: "A standard, language-agnostic specification for documenting REST APIs.", category: "API", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Idempotent HTTP Method", definition: "An HTTP method (e.g., PUT, DELETE) that can be safely retried without side effects.", category: "API", difficulty: "Intermediate", usageFrequency: "Common" },
            
            // Security
            { term: "Authentication", definition: "Verifying the identity of a user or system.", category: "Security", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Authorization", definition: "Determining what actions a user or system is allowed to perform.", category: "Security", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "OAuth 2.0", definition: "A protocol for authorization that lets third-party apps access user data without exposing credentials.", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "JWT", definition: "JSON Web Token; a compact way to securely transmit information between parties.", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "SSO (Single Sign-On)", definition: "An authentication scheme that allows users to log in once and access multiple systems.", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "CORS", definition: "Cross-Origin Resource Sharing; a browser security feature restricting cross-site HTTP requests.", category: "Security", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "XSS (Cross-Site Scripting)", definition: "A vulnerability where malicious scripts are injected into web pages.", category: "Security", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "CSRF", definition: "Cross-Site Request Forgery; tricks users into making unwanted requests to a site where they're authenticated.", category: "Security", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Hashing", definition: "Transforming data into a fixed-size string that represents its contents.", category: "Security", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Encryption", definition: "Encoding information so only authorized parties can access it.", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "TLS/SSL", definition: "Protocols that secure communications over networks (HTTPS).", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Secret Management", definition: "Storing, accessing, and controlling sensitive credentials and tokens.", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Zero Trust", definition: "A security model assuming no implicit trust, requiring verification for every access.", category: "Security", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Security Posture", definition: "An organization's overall strength and readiness to prevent or respond to threats.", category: "Security", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Vulnerability Scanner", definition: "A tool that detects known security flaws in systems and applications.", category: "Security", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "IAM (Identity & Access Management)", definition: "Processes and tools for managing digital identities and permissions.", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Audit Logging", definition: "Recording actions taken by users and systems for accountability and forensics.", category: "Security", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Penetration Testing", definition: "Simulated attacks to find exploitable vulnerabilities in systems.", category: "Security", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Security Headers", definition: "HTTP headers that improve the security of web applications.", category: "Security", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Least Privilege", definition: "Giving users only the access necessary to perform their job.", category: "Security", difficulty: "Beginner", usageFrequency: "Common" },

            // Tools
            { term: "Docker", definition: "A containerization platform that packages applications with their dependencies.", category: "Tools", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Kubernetes", definition: "An orchestration system for deploying, scaling, and managing containerized applications.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Terraform", definition: "An Infrastructure as Code tool for managing cloud and on-prem resources.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Ansible", definition: "A configuration management tool for automating software provisioning and deployment.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Prometheus", definition: "An open-source tool for monitoring and alerting based on time-series data.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Grafana", definition: "A visualization tool for dashboards and metrics, often paired with Prometheus.", category: "Tools", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Vault", definition: "A tool for securely storing and accessing secrets, tokens, and credentials.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Jenkins", definition: "An automation server for continuous integration and continuous delivery (CI/CD).", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "GitHub Actions", definition: "A CI/CD tool built into GitHub for automating workflows and deployments.", category: "Tools", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Argo CD", definition: "A GitOps continuous delivery tool for Kubernetes.", category: "Tools", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Helm", definition: "A Kubernetes package manager for defining, installing, and upgrading applications.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Istio", definition: "A service mesh for managing microservice traffic, security, and observability.", category: "Tools", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Linkerd", definition: "A lightweight service mesh alternative to Istio for Kubernetes.", category: "Tools", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Kafka", definition: "A distributed event streaming platform for high-throughput, real-time messaging.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "RabbitMQ", definition: "A message broker that supports multiple messaging protocols for service communication.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Fluentd", definition: "An open-source log collector that unifies data collection and forwarding.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Logstash", definition: "A tool for processing and forwarding logs, often used in the ELK stack.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "ElasticSearch", definition: "A distributed search and analytics engine commonly used for log and metrics analysis.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Consul", definition: "A service mesh and service discovery tool by HashiCorp.", category: "Tools", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Datadog", definition: "A commercial observability platform for monitoring, security, and analytics.", category: "Tools", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "CircleCI", definition: "A cloud-native CI/CD tool known for fast builds and parallel job execution.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Pulumi", definition: "An Infrastructure as Code tool using general-purpose languages like TypeScript or Python.", category: "Tools", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Spinnaker", definition: "A continuous delivery platform for managing multi-cloud deployments.", category: "Tools", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Nomad", definition: "A workload orchestrator for deploying containers and legacy applications.", category: "Tools", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Buildkite", definition: "A CI/CD tool that runs pipelines on your own infrastructure with cloud UI.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Skaffold", definition: "A command-line tool for continuous development on Kubernetes-native apps.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Tilt", definition: "A tool for rapid local Kubernetes development and live updates.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Rare" },
            { term: "Kind", definition: "Kubernetes in Docker; creates local clusters for testing.", category: "Tools", difficulty: "Beginner", usageFrequency: "Moderate" },
            { term: "Minikube", definition: "A local Kubernetes cluster for learning and testing.", category: "Tools", difficulty: "Beginner", usageFrequency: "Moderate" },
            { term: "K9s", definition: "A terminal-based UI to interact with Kubernetes clusters.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Tanka", definition: "A tool to manage Kubernetes configurations using Jsonnet.", category: "Tools", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Kustomize", definition: "A Kubernetes-native configuration tool for customizing YAML files.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Open Policy Agent (OPA)", definition: "A policy engine for enforcing fine-grained control across systems.", category: "Tools", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Falco", definition: "A runtime security tool for Kubernetes that detects abnormal behavior.", category: "Tools", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Sysdig", definition: "A monitoring, security, and troubleshooting platform for containers.", category: "Tools", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "New Relic", definition: "A SaaS observability platform offering APM, logs, and dashboards.", category: "Tools", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "PagerDuty", definition: "An incident response tool that notifies and escalates alerts to on-call teams.", category: "Tools", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Sentry", definition: "An error-tracking tool that helps developers monitor and fix crashes in real-time.", category: "Tools", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Splunk", definition: "A platform for searching, monitoring, and analyzing machine-generated data.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Artifactory", definition: "A repository manager for storing build artifacts and dependencies.", category: "Tools", difficulty: "Intermediate", usageFrequency: "Moderate" },

            // AI 
            { term: "Model Inference", definition: "The process of using a trained model to make predictions on new data.", category: "AI Systems", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Feature Store", definition: "A centralized repository for storing, managing, and serving ML features.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Model Drift", definition: "The degradation of model performance over time due to changes in input data patterns.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Model Registry", definition: "A versioned storage system for managing ML models, metadata, and deployment stages.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "A/B Testing (ML)", definition: "Evaluating multiple ML models or configurations in parallel to choose the best performer.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Online Inference", definition: "Real-time predictions made in response to live requests.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Batch Inference", definition: "Generating predictions in bulk for large datasets at scheduled intervals.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Retraining Pipeline", definition: "An automated process that updates models using fresh data.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "MLOps", definition: "The discipline of deploying, monitoring, and maintaining machine learning models in production.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Vector Database", definition: "A database optimized for storing and querying high-dimensional vector embeddings.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Embedding", definition: "A dense vector representation of data (e.g. text, images) used for similarity or input to models.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Semantic Search", definition: "Search based on meaning using embeddings and vector similarity, rather than keywords.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Prompt Engineering", definition: "Crafting input prompts to elicit desired outputs from language models.", category: "AI Systems", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "RAG (Retrieval-Augmented Generation)", definition: "Combines external knowledge retrieval with generation from a language model.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Latency Budget (AI)", definition: "Time constraints placed on AI systems to return predictions within acceptable limits.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Token Limit", definition: "The maximum number of tokens a language model can process in a single input.", category: "AI Systems", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Cold Start (Model)", definition: "Delay in serving predictions due to model loading or warm-up time.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Fine-tuning", definition: "Adjusting a pre-trained model's weights using domain-specific labeled data.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Zero-Shot Learning", definition: "The ability of a model to generalize to tasks it was not explicitly trained on.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "LLM Gateway", definition: "An API service that handles routing, prompt enrichment, logging, and access control for LLMs.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Model Serving", definition: "Deploying and exposing ML models as scalable services via APIs or endpoints.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Latency vs Accuracy Tradeoff", definition: "Balancing response time with model performance when deploying AI systems.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Common" },
            { term: "Model Versioning", definition: "Tracking changes to models and allowing rollback or comparison between versions.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Explainability (XAI)", definition: "Techniques that make model decisions interpretable to humans.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Concept Drift", definition: "A shift in the statistical properties of target variables over time, affecting model accuracy.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Multi-Modal Model", definition: "A model that takes inputs from different data types such as text, image, and audio.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Quantization", definition: "Reducing the precision of model weights (e.g., from float32 to int8) to improve inference speed and memory use.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Distillation", definition: "Training a smaller model (student) to replicate the behavior of a larger one (teacher).", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Model Cascade", definition: "Using lightweight models first and escalating to more complex ones if needed.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Rare" },
            { term: "Safety Classifier", definition: "A model component that detects and filters harmful, toxic, or unsafe outputs.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Guardrails", definition: "Pre- and post-processing rules or filters that enforce constraints on AI outputs.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Tokenization", definition: "Splitting raw text into chunks (tokens) that a model can process.", category: "AI Systems", difficulty: "Beginner", usageFrequency: "Common" },
            { term: "Beam Search", definition: "A decoding algorithm that keeps multiple hypotheses during text generation.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Top-k Sampling", definition: "A decoding strategy that samples from the top-k most likely next tokens.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Top-p Sampling (Nucleus)", definition: "A decoding method that samples from the smallest possible set of words whose cumulative probability exceeds p.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Context Window", definition: "The maximum amount of text (in tokens) a language model can consider at once.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Common" },
            { term: "Embedding Cache", definition: "A layer that stores frequently queried embeddings to reduce redundant computation.", category: "AI Systems", difficulty: "Intermediate", usageFrequency: "Moderate" },
            { term: "Neural Search", definition: "Search based on semantic similarity using embeddings and deep learning models.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "LLMOps", definition: "Operational practices and tools for deploying and managing large language models in production.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },
            { term: "Agents (AI)", definition: "Autonomous systems that use LLMs to perform actions based on reasoning, planning, and memory.", category: "AI Systems", difficulty: "Advanced", usageFrequency: "Moderate" },

        ];